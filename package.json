{
    "name": "ccs3",
    "version": "1.0.0",
    "description": "",
    "main": "index.js",
    "scripts": {
        "libs/types:install-deps": "npm --workspace libs/types install",
        "libs/types:install-deps-omit-dev": "npm --workspace libs/types install --omit=dev",
        "libs/types:build": "npm --workspace libs/types run build",
        "libs/types:build-watch": "npm --workspace libs/types run build:watch",
        "libs/redis-client:install-deps": "npm --workspace libs/redis-client install",
        "libs/redis-client:install-deps-omit-dev": "npm --workspace libs/redis-client install --omit=dev",
        "libs/redis-client:build": "npm --workspace libs/redis-client run build",
        "libs/redis-client:build-watch": "npm --workspace libs/redis-client run build:watch",
        "libs/websocket-server:install-deps": "npm --workspace libs/websocket-server install",
        "libs/websocket-server:install-deps-omit-dev": "npm --workspace libs/websocket-server install --omit=dev",
        "libs/websocket-server:build": "npm --workspace libs/websocket-server run build",
        "libs/websocket-server:build-watch": "npm --workspace libs/websocket-server run build:watch",
        "apps/state-manager:install-deps": "npm --workspace apps/state-manager install",
        "apps/state-manager:install-deps-omit-dev": "npm --workspace apps/state-manager install --omit=dev",
        "apps/state-manager:build": "npm --workspace apps/state-manager run build",
        "apps/state-manager:build-watch": "npm --workspace apps/state-manager run build:watch",
        "apps/state-manager:build-include-deps": "npm run libs/types:install-deps && npm run libs/types:build && npm run libs/redis-client:install-deps && npm run libs/redis-client:build && npm run apps/state-manager:install-deps && npm run apps/state-manager:build",
        "apps/state-manager:build-image-docker": "docker build -t ccs3/state-manager:latest -f devops/Dockerfile.state-manager .",
        "apps/state-manager:build-image-nerdctl": "nerdctl -n k8s.io build -t ccs3/state-manager:latest -f devops/Dockerfile.state-manager .",
        "apps/pc-connector:install-deps": "npm --workspace apps/pc-connector install",
        "apps/pc-connector:install-deps-omit-dev": "npm --workspace apps/pc-connector install --omit=dev",
        "apps/pc-connector:build": "npm --workspace apps/pc-connector run build",
        "apps/pc-connector:build-watch": "npm --workspace apps/pc-connector run build:watch",
        "apps/pc-connector:build-include-deps": "npm run libs/types:install-deps && npm run libs/types:build && npm run libs/websocket-server:install-deps && npm run libs/websocket-server:build && npm run libs/redis-client:install-deps && npm run libs/redis-client:build && npm run apps/pc-connector:install-deps && npm run apps/pc-connector:build",
        "apps/pc-connector:build-image-docker": "docker build -t ccs3/pc-connector:latest -f devops/Dockerfile.pc-connector .",
        "apps/pc-connector:build-image-nerdctl": "nerdctl -n k8s.io build -t ccs3/pc-connector:latest -f devops/Dockerfile.pc-connector .",
        "apps/operator-connector:install-deps": "npm --workspace apps/operator-connector install",
        "apps/operator-connector:install-deps-omit-dev": "npm --workspace apps/operator-connector install --omit=dev",
        "apps/operator-connector:build": "npm --workspace apps/operator-connector run build",
        "apps/operator-connector:build-watch": "npm --workspace apps/operator-connector run build:watch",
        "apps/operator-connector:build-include-deps": "npm run libs/types:install-deps && npm run libs/types:build && npm run libs/redis-client:install-deps && npm run libs/redis-client:build && npm run libs/websocket-server:install-deps && npm run libs/websocket-server:build && npm run apps/operator-connector:install-deps && npm run apps/operator-connector:build",
        "apps/operator-connector:build-image-docker": "docker build -t ccs3/operator-connector:latest -f devops/Dockerfile.operator-connector .",
        "apps/operator-connector:build-image-nerdctl": "nerdctl -n k8s.io build -t ccs3/operator-connector:latest -f devops/Dockerfile.operator-connector .",
        "apps/qrcode-signin:install-deps": "npm --workspace apps/qrcode-signin install",
        "apps/qrcode-signin:install-deps-omit-dev": "npm --workspace apps/qrcode-signin install --omit=dev",
        "apps/qrcode-signin:build": "npm --workspace apps/qrcode-signin run build",
        "apps/qrcode-signin:build-watch": "npm --workspace apps/qrcode-signin run build:watch",
        "apps/qrcode-signin:build-include-deps": "npm run libs/types:install-deps && npm run libs/types:build && npm run libs/redis-client:install-deps && npm run libs/redis-client:build && npm run apps/qrcode-signin:install-deps && npm run apps/qrcode-signin:build",
        "apps/qrcode-signin:build-image-docker": "docker build -t ccs3/qrcode-signin:latest -f devops/Dockerfile.qrcode-signin .",
        "apps/qrcode-signin:build-image-nerdctl": "nerdctl -n k8s.io build -t ccs3/qrcode-signin:latest -f devops/Dockerfile.qrcode-signin .",
        "build-images-docker": "npm run apps/state-manager:build-image-docker && npm run apps/pc-connector:build-image-docker",
        "build-images-nerdctl": "npm run apps/state-manager:build-image-nerdctl && npm run apps/pc-connector:build-image-nerdctl && npm run apps/operator-connector:build-image-nerdctl && npm run apps/qrcode-signin:build-image-nerdctl",
        "build": "npm run libs/types:install-deps && npm run libs/types:build && npm run libs/websocket-server:install-deps && npm run libs/websocket-server:build && npm run libs/redis-client:install-deps && npm run libs/redis-client:build && npm run apps/state-manager:install-deps && npm run apps/state-manager:build && npm run apps/pc-connector:install-deps && npm run apps/pc-connector:build && npm run apps/operator-connector:install-deps && npm run apps/operator-connector:build && npm run apps/qrcode-signin:install-deps && npm run apps/qrcode-signin:build",
        "eslint": "eslint"
    },
    "author": "",
    "license": "MIT",
    "workspaces": [
        "apps/*",
        "libs/*"
    ],
    "engines": {
        "node": ">=22.12.0",
        "npm": ">=10.2.4"
    },
    "devDependencies": {
        "@eslint/js": "^9.23.0",
        "@stylistic/eslint-plugin-js": "^4.2.0",
        "eslint": "^9.23.0",
        "globals": "^16.0.0",
        "typescript-eslint": "^8.28.0"
    }
}
