CREATE TABLE permission
(
    id SERIAL PRIMARY KEY NOT NULL,
    name text NOT NULL,
    CONSTRAINT permission_name_key UNIQUE (name)
);

INSERT INTO permission
(
	name
)
VALUES
(
	'all'
);

CREATE TABLE role
(
    id SERIAL PRIMARY KEY NOT NULL,
    name text NOT NULL,
    CONSTRAINT role_name_key UNIQUE (name)
);

INSERT INTO role
(
	name
)
VALUES
(
	'admin'
);

CREATE TABLE permission_in_role
(
    id SERIAL PRIMARY KEY NOT NULL,
    role_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT role_permission_role_id_permission_id_key UNIQUE (role_id, permission_id),
    CONSTRAINT permission_in_role_permission_id_fkey FOREIGN KEY (permission_id)
        REFERENCES permission (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT permission_in_role_role_id_fkey FOREIGN KEY (role_id)
        REFERENCES role (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
);

INSERT INTO permission_in_role
(
    role_id,
    permission_id
)
VALUES
(
    1,
    1
);

CREATE TABLE "user"
(
    id SERIAL PRIMARY KEY NOT NULL,
    username text NOT NULL,
    password_hash text NOT NULL,
    enabled boolean NOT NULL,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone,
    CONSTRAINT user_username_key UNIQUE (username)
);

CREATE TABLE user_in_role
(
    id SERIAL PRIMARY KEY NOT NULL,
    user_id integer NOT NULL,
    role_id integer NOT NULL,
    CONSTRAINT user_in_role_uesr_id_role_id_key UNIQUE (user_id, role_id),
    CONSTRAINT user_in_role_role_id_fkey FOREIGN KEY (role_id)
        REFERENCES role (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT user_in_role_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES "user" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
);

INSERT INTO "user"
(
    username,
    "password_hash",
    enabled,
    created_at
)
VALUES
(
    'admin',
    'c7ad44cbad762a5da0a452f9e854fdc1e0e7a52a38015f23f3eab1d80b931dd472634dfac71cd34ebc35d16ab7fb8a90c81f975113d6c7538dc69dd8de9077ec',
    true,
    NOW()::timestamp
);

INSERT INTO user_in_role
(
    user_id,
    role_id
)
VALUES
(
    1,
    1
);

UPDATE db_metadata
SET value = '5'
WHERE name = 'database-version';